# Generated by Django 4.0.3 on 2022-05-09 06:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('restaurantTime', models.IntegerField(null=True)),
                ('restaurantLatitue', models.FloatField(blank=True)),
                ('restaurantLognitude', models.FloatField(blank=True)),
                ('restaurant_url', models.URLField(blank=True, default='', max_length=400, null=True, verbose_name='식당 URL')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='restaurants', verbose_name='식당 이미지')),
            ],
        ),
        migrations.CreateModel(
            name='Stay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('stayLatitue', models.FloatField(blank=True)),
                ('stayLognitude', models.FloatField(blank=True)),
                ('restaurant_url', models.URLField(blank=True, default='', max_length=400, null=True, verbose_name='숙소 UR')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='stays', verbose_name='숙소 이미지')),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=12)),
                ('value', models.FloatField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Tour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30)),
                ('tourTime', models.IntegerField(null=True)),
                ('tourLatitue', models.FloatField(blank=True)),
                ('tourLongitude', models.FloatField(blank=True)),
                ('tour_url', models.URLField(blank=True, default='', max_length=400, null=True, verbose_name='관광지 URL')),
                ('image_file', models.ImageField(blank=True, null=True, upload_to='tours', verbose_name='관광지 이미지')),
                ('cnt', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=10)),
                ('age', models.IntegerField(blank=True)),
                ('gender', models.CharField(choices=[('M', '남성(Man)'), ('W', '여성(Woman)')], default='', max_length=1, verbose_name='성별')),
                ('tag', models.CharField(max_length=12, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('restaurant', models.ManyToManyField(blank=True, to='community.restaurant')),
                ('stay', models.ManyToManyField(blank=True, to='community.stay')),
                ('tag', models.ManyToManyField(blank=True, to='community.tag')),
                ('tour', models.ManyToManyField(blank=True, to='community.tour')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='community.user')),
            ],
        ),
        migrations.CreateModel(
            name='Input',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('startperiod', models.DateTimeField(null=True)),
                ('endperiod', models.DateTimeField(null=True)),
                ('area', models.CharField(max_length=20)),
                ('tag', models.ManyToManyField(blank=True, to='community.tag')),
                ('user_id', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='community.user')),
            ],
        ),
    ]
